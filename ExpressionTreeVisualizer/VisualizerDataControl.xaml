<DockPanel x:Class="ExpressionTreeVisualizer.VisualizerDataControl" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:my="clr-namespace:ExpressionTreeVisualizer" xmlns:ygoe="clr-namespace:System.Windows.Controls;assembly=MultiSelectTreeView">
    <FrameworkElement.Resources>
        <my:RootConverter x:Key="RootConverter" />
        <my:ConditionalFormatConverter x:Key="ConditionalFormatConverter" />
        <my:AnyVisibilityConverter x:Key="AnyVisibilityConverter" />
        <SolidColorBrush Color="#066555" x:Key="TypeColor" />
        <HierarchicalDataTemplate x:Key="ExpressionNodeTemplate" ItemsSource="{Binding Value.Children}">
            <TextBlock>
                <TextBlock.ToolTip>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="65" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Text="Path" />
                        <TextBlock Text="{Binding Key}" Grid.Column="1" FontWeight="Bold" />
                        <TextBlock Text="Node type" Grid.Row="1" />
                        <TextBlock Text="{Binding Value.NodeType}" Grid.Column="1" Grid.Row="1" FontWeight="Bold" />
                        <TextBlock Text="Type" Grid.Row="2" />
                        <TextBlock Text="{Binding Value.ReflectionTypeName}" Grid.Column="1" Grid.Row="2" FontWeight="Bold" />
                        <TextBlock Text="Name" Grid.Row="3" />
                        <TextBlock Text="{Binding Value.Name}" Grid.Column="1" Grid.Row="3" FontWeight="Bold" />
                        <TextBlock Text="Value" Grid.Row="4" />
                        <TextBlock Text="{Binding Value.StringValue}" Grid.Column="1" Grid.Row="4" FontWeight="Bold" />
                    </Grid>
                </TextBlock.ToolTip>
                <Run Foreground="DarkGray" Text="{Binding Key, Mode=OneTime, Converter={StaticResource ConditionalFormatConverter}, ConverterParameter=\{0\} -}" />
                <Run Text="{Binding Value.NodeType, Mode=OneTime}" FontWeight="Bold" />
                <Run Text="{Binding Value.ReflectionTypeName, Mode=OneTime, Converter={StaticResource ConditionalFormatConverter}, ConverterParameter= ({0})}" Foreground="{StaticResource TypeColor}" />
                <Run Text="{Binding Value.Name, Mode=OneTime, Converter={StaticResource ConditionalFormatConverter}, ConverterParameter= \{0\}}" />
                <Run Text="{Binding Value.StringValue, Mode=OneTime, Converter={StaticResource ConditionalFormatConverter}, ConverterParameter=\= {0}}" />
            </TextBlock>
        </HierarchicalDataTemplate>
    </FrameworkElement.Resources>
    <DockPanel DockPanel.Dock="Right" Width="{Binding ActualWidth, ElementName=endNodes}" Margin="0,12,12,12">
        <Grid DockPanel.Dock="Bottom" x:Name="endNodes">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Grid.Column" Value="0" />
                    <Setter Property="Margin" Value="0,0,0,12" />
                </Style>
                <Style TargetType="DataGrid">
                    <Setter Property="IsReadOnly" Value="True" />
                    <Setter Property="AutoGenerateColumns" Value="False" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="Visibility" Value="{Binding ItemsSource, RelativeSource={RelativeSource Self}, Converter={StaticResource AnyVisibilityConverter}}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="Margin" Value="0,0,0,12" />
                    <Setter Property="HeadersVisibility" Value="Column" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
                <Style TargetType="DataGridRow">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{x:Static SystemColors.HighlightColor}" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{x:Static SystemColors.HighlightTextColor}" />
                    </Style.Resources>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Text="Parameters: " Visibility="{Binding Parameters, Converter={StaticResource AnyVisibilityConverter}}" />
            <DataGrid ItemsSource="{Binding Parameters}" SelectedValuePath="Key">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key.Name}" Header="Name" />
                    <DataGridTextColumn Binding="{Binding Key.Type}" Header="Type" Foreground="{StaticResource TypeColor}" />
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Text="Closed-over variables: " Grid.Row="1" Visibility="{Binding ClosedVars, Converter={StaticResource AnyVisibilityConverter}}" />
            <DataGrid ItemsSource="{Binding ClosedVars}" SelectedValuePath="Key" Grid.Row="1">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key.Closure}" Header="Closure" />
                    <DataGridTextColumn Binding="{Binding Key.Name}" Header="Name" />
                    <DataGridTextColumn Binding="{Binding Key.Type}" Header="Type" Foreground="{StaticResource TypeColor}" />
                    <DataGridTextColumn Binding="{Binding Key.Value}" Header="Value" />
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Text="Constants: " Grid.Row="2" Visibility="{Binding Constants, Converter={StaticResource AnyVisibilityConverter}}" />
            <DataGrid ItemsSource="{Binding Constants}" SelectedValuePath="Key" Grid.Row="2">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key.Type}" Header="Type" Foreground="{StaticResource TypeColor}" />
                    <DataGridTextColumn Binding="{Binding Key.Value}" Header="Value" />
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Text="Defaults: " Grid.Row="3" Visibility="{Binding Defaults, Converter={StaticResource AnyVisibilityConverter}}" />
            <DataGrid ItemsSource="{Binding Defaults}" SelectedValuePath="Key" Grid.Row="3">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Key.Type}" Header="Type" Foreground="{StaticResource TypeColor}" />
                    <DataGridTextColumn Binding="{Binding Key.Value}" Header="Value" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <ComboBox Name="cmbLanguages" DockPanel.Dock="Top" HorizontalAlignment="Right" SelectedItem="{Binding Language}" Margin="0,0,0,9" />
        <TextBox Text="{Binding Source}" TextWrapping="Wrap" FontFamily="Consolas" FontSize="14" Name="source" IsInactiveSelectionHighlightEnabled="True" SelectionBrush="Blue" IsReadOnly="True" IsReadOnlyCaretVisible="True" BorderThickness="1" BorderBrush="Gray" Margin="0,0,0,12" />
    </DockPanel>
    <ygoe:MultiSelectTreeView ItemsSource="{Binding NodeData, Converter={StaticResource RootConverter}}" ItemTemplate="{StaticResource ExpressionNodeTemplate}" Name="tree" BorderThickness="1" BorderBrush="Gray" Margin="12">
        <ygoe:MultiSelectTreeView.ItemContainerStyle>
            <Style TargetType="ygoe:MultiSelectTreeViewItem">
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="ItemIndent" Value="18" />
                <Setter Property="IsSelected" Value="{Binding Value.IsSelected, Mode=TwoWay}" />
            </Style>
        </ygoe:MultiSelectTreeView.ItemContainerStyle>
    </ygoe:MultiSelectTreeView>
</DockPanel>    
